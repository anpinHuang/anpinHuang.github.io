et <- rnorm(m,0,0.8)*x
yt <- 1.2 + 3*x+et
plot(x,yt)
yWLS <- yt/x
xWLS <- x/x
WLS <- lm(yWLS~xWLS)
summary(WLS)
yWLS <- yt/x
xWLS <- 1/x
WLS <- lm(yWLS~xWLS)
summary(WLS)
m=30
x <- rnorm(m,0.1,0.06)
## assuming correlation in x
et <- rnorm(m,0,0.8)*x
yt <- 1.2 + 3*x+et
regressY <- lm(yt~x)
summary(regressY)
regressY$coefficients
yWLS <- yt/x
xWLS <- 1/x
WLS <- lm(yWLS~xWLS)
summary(WLS)
n=1000
OLS_coefs <- matrix(nrow=n,ncol=2)
WLS_coefs <- matrix(nrow=n,ncol=2)
for(i in 1:n) {
m=30
x <- rnorm(m,0.1,0.06)
## assuming correlation in x
et <- rnorm(m,0,0.8)*x
yt <- 1.2 + 3*x+et
regressY <- lm(yt~x)
OLS_coefs <- regressY$coefficients
## WLS
yWLS <- yt/x
xWLS <- 1/x
WLS <- lm(yWLS~xWLS)
WLS_coefs[1] <- WLS$coefficients[2]
WLS_coefs[2] <- WLS$coefficients[1]
}
colMeans(OLS_coefs)
OLS_coefs
n=1000
OLS_coefs <- matrix(nrow=n,ncol=2)
WLS_coefs <- matrix(nrow=n,ncol=2)
for(i in 1:n) {
m=30
x <- rnorm(m,0.1,0.06)
## assuming correlation in x
et <- rnorm(m,0,0.8)*x
yt <- 1.2 + 3*x+et
regressY <- lm(yt~x)
OLS_coefs[i,] <- regressY$coefficients
## WLS
yWLS <- yt/x
xWLS <- 1/x
WLS <- lm(yWLS~xWLS)
WLS_coefs[i,1] <- WLS$coefficients[2]
WLS_coefs[i,2] <- WLS$coefficients[1]
}
OLS_coefs
colMeans(OLS_coefs)
colMeans(GLS_coefs)
colMeans(OLS_coefs)
colMeans(WLS_coefs)
colVars(OLS_coefs)
colVars(WLS_coefs)
hist(OLS_coefs[,2],breaks=20,xlim=c(-5,10),ylim=c(0,600))
hist(GLS_coefs[,2],breaks=20,xlim=c(-5,10),ylim=c(0,600))
hist(OLS_coefs[,2],breaks=20,xlim=c(-5,10),ylim=c(0,600))
hist(WLS_coefs[,2],breaks=20,xlim=c(-5,10),ylim=c(0,600))
OLS_coefs
hist(OLS_coefs[,2],breaks=10,xlim=c(-5,10),ylim=c(0,400))
hist(OLS_coefs[,2],breaks=5,xlim=c(-5,10),ylim=c(0,400))
hist(OLS_coefs[,2],breaks=10,xlim=c(-5,10),ylim=c(0,400))
summary(regressY)
summary(WLS)
et
x
rnorm(m,0,0.8)
x <- rnorm(m,0.1,0.06)
## assuming correlation in x
et <- rnorm(m,0,0.08)*x
yt <- 1.2 + 3*x+et
regressY <- lm(yt~x)
summary(regressY)
x <- rnorm(m,0.1,0.06)
## assuming correlation in x
et <- rnorm(m,0,0.08)*x
yt <- 1.2 + 1.2*x+et
regressY <- lm(yt~x)
summary(regressY)
et
yt
x
x <- rnorm(m,0.1,0.06)
## assuming correlation in x
et <- rnorm(m,0,0.08)*x
yt <- 0.2 + 3*x+et
regressY <- lm(yt~x)
summary(regressY)
x <- rnorm(m,0.1,0.06)
## assuming correlation in x
et <- rnorm(m,0,0.2)*x
yt <- 1.2 + 3*x+et
regressY <- lm(yt~x)
summary(regressY)
et
yt
xt
x
x <- rnorm(m,0.1,0.06)
## assuming correlation in x
et <- rnorm(m,0,0.2)*x
yt <- 1.2 + 1.3*x+et
regressY <- lm(yt~x)
summary(regressY)
et
x
x <- rnorm(m,0.1,0.06)
## assuming correlation in x
et <- rnorm(m,0,0.6)*x
yt <- 1.2 + 1.3*x+et
regressY <- lm(yt~x)
summary(regressY)
n=1000
OLS_coefs <- matrix(nrow=n,ncol=2)
WLS_coefs <- matrix(nrow=n,ncol=2)
for(i in 1:n) {
m=30
x <- rnorm(m,0.1,0.06)
## assuming correlation in x
et <- rnorm(m,0,0.6)*x
yt <- 1.2 + 1.3*x+et
regressY <- lm(yt~x)
OLS_coefs[i,] <- regressY$coefficients
## WLS
yWLS <- yt/x
xWLS <- 1/x
WLS <- lm(yWLS~xWLS)
WLS_coefs[i,1] <- WLS$coefficients[2]
WLS_coefs[i,2] <- WLS$coefficients[1]
}
colMeans(OLS_coefs)
colMeans(WLS_coefs)
colVars(OLS_coefs)
colVars(WLS_coefs)
hist(WLS_coefs[,2],breaks=20,xlim=c(-5,10),ylim=c(0,400))
hist(WLS_coefs[,2],breaks=20,xlim=c(0,5),ylim=c(0,400))
hist(OLS_coefs[,2],breaks=10,xlim=c(-5,10),ylim=c(0,400))
hist(OLS_coefs[,2],breaks=20,xlim=c(0,5),ylim=c(0,400))
hist(OLS_coefs[,2],breaks=20,xlim=c(0,3),ylim=c(0,400))
hist(WLS_coefs[,2],breaks=20,xlim=c(0,3),ylim=c(0,400))
hist(OLS_coefs[,2],breaks=20,xlim=c(0,3),ylim=c(0,400))
hist(WLS_coefs[,2],breaks=20,xlim=c(0,3),ylim=c(0,400))
hist(OLS_coefs[,2],breaks=10,xlim=c(0,3),ylim=c(0,400))
hist(WLS_coefs[,2],breaks=10,xlim=c(0,3),ylim=c(0,400))
colVars(OLS_coefs)
colVars(WLS_coefs)
hist(WLS_coefs[,2],breaks=10,xlim=c(0,3),ylim=c(0,400))
hist(OLS_coefs[,2],breaks=10,xlim=c(0,3),ylim=c(0,400))
hist(OLS_coefs[,2],breaks=20,xlim=c(0,3),ylim=c(0,400))
hist(WLS_coefs[,2],breaks=10,xlim=c(0,3),ylim=c(0,400))
n=2000
OLS_coefs <- matrix(nrow=n,ncol=2)
WLS_coefs <- matrix(nrow=n,ncol=2)
for(i in 1:n) {
m=30
x <- rnorm(m,0.1,0.06)
## assuming correlation in x
et <- rnorm(m,0,0.8)*x
yt <- 1.2 + 1.3*x+et
regressY <- lm(yt~x)
OLS_coefs[i,] <- regressY$coefficients
## WLS
yWLS <- yt/x
xWLS <- 1/x
WLS <- lm(yWLS~xWLS)
WLS_coefs[i,1] <- WLS$coefficients[2]
WLS_coefs[i,2] <- WLS$coefficients[1]
}
colMeans(OLS_coefs)
colMeans(WLS_coefs)
colVars(OLS_coefs)
colVars(WLS_coefs)
hist(OLS_coefs[,2],breaks=20,xlim=c(0,3),ylim=c(0,400))
hist(WLS_coefs[,2],breaks=10,xlim=c(0,3),ylim=c(0,400))
hist(WLS_coefs[,2],breaks=20,xlim=c(0,3),ylim=c(0,400))
hist(WLS_coefs[,2],breaks=20,xlim=c(0,3),ylim=c(0,600))
hist(OLS_coefs[,2],breaks=20,xlim=c(0,3),ylim=c(0,600))
render_site("heteroskedasticity")
render_site("heteroskedasticity.rmd")
render_site("econometrics.rmd"
)
render_site("econometrics.rmd"
)
hist(WLS_coefs[,2],breaks=20,xlim=c(0,3),ylim=c(0,600))
hist(OLS_coefs[,2],breaks=20,xlim=c(0,3),ylim=c(0,600))
hist(WLS_coefs[,2],breaks=10,xlim=c(0,3),ylim=c(0,600))
render_site("heteroskedasticity.rmd")
render_site("heteroskedasticity.rmd")
render_site("heteroskedasticity.rmd")
render_site("deriveOLS.rmd")
render_site("deriveOLS.rmd")
render_site("deriveOLS.rmd")
render_site("deriveOLS.rmd")
render_site("deriveOLS.rmd")
render_site("deriveOLS.rmd")
render_site("deriveOLS.rmd")
render_site("deriveOLS.rmd")
render_site("deriveOLS.rmd")
render_site("deriveOLS.rmd")
render_site("deriveOLS.rmd")
render_site("deriveOLS.rmd")
render_site("deriveOLS.rmd")
render_site()
render_site("autocorrelation.rmd")
render_site("deriveOLS.rmd")
render_site("deriveOLS.rmd")
render_site("deriveOLS.rmd")
render_site("deriveOLS.rmd")
render_site("deriveOLS.rmd")
render_site("deriveOLS.rmd")
render_site("deriveOLS.rmd")
render_site("deriveOLS.rmd")
training <- fread("train_2.csv")
library(data.table)
training <- fread("train_2.csv")
setwd("~/Documents/R")
library(rrcov)
library(woe)
training <- fread("train_2.csv")
View(training)
property <- fread("properties_2016.csv")
property <- as.data.frame(property)
View(head(property))
summary(property)
View(head(property))
View(head(error))
error <- fread("train_2016_v2.csv")
error <- as.data.frame(error)
error <- fread("train_2016_v2.csv")
error <- as.data.frame(error)
View(head(error))
All <- merge(error,property,by.x="parcelid",by.y="parcelid")
View(All)
View(head(aAll))
View(head(All))
aggregate(All$logerror, list(All$buildingqualitytypeid), mean)
aggregate(All[c("logerror","buildingqualitytypeid"),], list(All$buildingqualitytypeid), mean)
View(head(All[c("logerror","buildingqualitytypeid"),]))
aggregate(All[,c("logerror","buildingqualitytypeid")], list(All$buildingqualitytypeid), mean)
aggregate(All[,c("logerror","buildingqualitytypeid")], list(All$buildingqualitytypeid), median)
All_temp_buildingqualitytypeid8 <- All[All[,"buildingqualitytypeid"]==8,c("logerror","buildingqualitytypeid")
property <- as.data.frame(property)
All_temp_buildingqualitytypeid8 <- All[All[,"buildingqualitytypeid"]==8,"logerror"]
hist(All_temp_buildingqualitytypeid8)
hist(All_temp_buildingqualitytypeid8,break=10)
hist(All_temp_buildingqualitytypeid8,breaks=10)
hist(All_temp_buildingqualitytypeid8,breaks=20)
hist(All_temp_buildingqualitytypeid8,breaks=100)
All_temp_buildingqualitytypeid8
na.omit(All_temp_buildingqualitytypeid8)
View(All_temp_buildingqualitytypeid8)
na.omit(All_temp_buildingqualitytypeid8)
All[,"buildingqualitytypeid"]==8
All_temp_buildingqualitytypeid8 <- All[All[,"buildingqualitytypeid"]==8,"logerror"]
View(All_temp_buildingqualitytypeid8)
All[which(All[,"buildingqualitytypeid"]==8),"logerror"]
All_temp_buildingqualitytypeid8 <- All[which(All[,"buildingqualitytypeid"]==8),"logerror"]
All_temp_buildingqualitytypeid8
aggregate(All[,c("logerror","buildingqualitytypeid")], list(All$buildingqualitytypeid), count)
count(All,"buildingqualitytypeid")
count(All,'buildingqualitytypeid')
library(plyr)
install.packages(plyr)
install.packages("plyr")
library(plyr)
count(All,'buildingqualitytypeid')
aggregate(All[,c("logerror","buildingqualitytypeid")], list(All$buildingqualitytypeid), mean)
View(head(property))
View(head(property))
aggregate(All[,c("logerror","propertylandusetypeid")], list(All$propertylandusetypeid), mean)
count(All,'propertylandusetypeid') ## library plyr
count(All,'propertylandusetypeid') ## library plyr
largeFreqPropertyLandUseType <- count(All,'propertylandusetypeid') ## library plyr
largeFreqPropertyLandUseType[largeFreqPropertyLandUseType[,2]>100,1]
aggregate(All[,c("logerror","propertylandusetypeid")], list(All$propertylandusetypeid %in% largeFreqPropertyLandUseType), mean)
All$propertylandusetypeid %in% largeFreqPropertyLandUseType
list(All$propertylandusetypeid)
aggregate(All[,c("logerror","propertylandusetypeid")], list(261,269), mean)
aggregate(All[,c("logerror","propertylandusetypeid")], list(All$propertylandusetypeid %in% largeFreqPropertyLandUseType), mean)
aggregate(All[,c("logerror","propertylandusetypeid")], list(All$propertylandusetypeid), mean)
largeFreqPropertyLandUseType <- largeFreqPropertyLandUseType[largeFreqPropertyLandUseType[,2]>100,1]
All_largeFreqPropertyLandUseType <- All[All[,'propertylandusetypeid'] %in% largeFreqPropertyLandUseType,]
View(All)
aggregate(All_largeFreqPropertyLandUseType[,c("logerror","propertylandusetypeid")], list(All_largeFreqPropertyLandUseType), mean)
aggregate(All_largeFreqPropertyLandUseType[,c("logerror","propertylandusetypeid")], list(All_largeFreqPropertyLandUseType$propertylandusetypeid), mean)
aggregate(All_largeFreqPropertyLandUseType[,c("logerror","propertylandusetypeid")], list(All_largeFreqPropertyLandUseType$propertylandusetypeid), median)
All_largeFreqPropertyLandUseType[All_largeFreqPropertyLandUseTyp[,"propertylandusetypeid"]==265,c("logerror","propertylandusetypeid")]
All_largeFreqPropertyLandUseType[All_largeFreqPropertyLandUseType[,"propertylandusetypeid"]==265,c("logerror","propertylandusetypeid")]
hist(All_largeFreqPropertyLandUseType[All_largeFreqPropertyLandUseType[,"propertylandusetypeid"]==265,c("logerror","propertylandusetypeid")])
hist(All_largeFreqPropertyLandUseType[All_largeFreqPropertyLandUseType[,"propertylandusetypeid"]==265,c("logerror","propertylandusetypeid")])
hist(All_largeFreqPropertyLandUseType[All_largeFreqPropertyLandUseType[,"propertylandusetypeid"]==265,c("logerror","propertylandusetypeid")])
hist(All_largeFreqPropertyLandUseType[All_largeFreqPropertyLandUseType[,"propertylandusetypeid"]==265,c("logerror","propertylandusetypeid")],breaks=20)
All_largeFreqPropertyLandUseType[All_largeFreqPropertyLandUseTyp[,"propertylandusetypeid"]==265,c("logerror","propertylandusetypeid")]All_largeFreqPropertyLandUseType[All_largeFreqPropertyLandUseType[,"propertylandusetypeid"]==265,c("logerror","propertylandusetypeid")]
All_largeFreqPropertyLandUseType[All_largeFreqPropertyLandUseType[,"propertylandusetypeid"]==265,c("logerror","propertylandusetypeid")]
hist(All_largeFreqPropertyLandUseType[All_largeFreqPropertyLandUseType[,"propertylandusetypeid"]==265,"logerror"],breaks=20)
All_largeFreqPropertyLandUseType[All_largeFreqPropertyLandUseType[,"propertylandusetypeid"]==265,c("logerror","propertylandusetypeid")]
aggregate(All_largeFreqPropertyLandUseType[,c("logerror","propertylandusetypeid")], list(All_largeFreqPropertyLandUseType$propertylandusetypeid), mean)
hist(All_largeFreqPropertyLandUseType[All_largeFreqPropertyLandUseType[,"propertylandusetypeid"]==265,"logerror"],breaks=30)
hist(All_largeFreqPropertyLandUseType[All_largeFreqPropertyLandUseType[,"propertylandusetypeid"]==265,"logerror"],breaks=50)
hist(All_largeFreqPropertyLandUseType[All_largeFreqPropertyLandUseType[,"propertylandusetypeid"]==265,"logerror"],breaks=100)
hist(All_largeFreqPropertyLandUseType[All_largeFreqPropertyLandUseType[,"propertylandusetypeid"]==248,"logerror"],breaks=100)
hist(All_largeFreqPropertyLandUseType[All_largeFreqPropertyLandUseType[,"propertylandusetypeid"]==265,"logerror"],breaks=100,xlim=c(-0.4,0.4))
hist(All_largeFreqPropertyLandUseType[All_largeFreqPropertyLandUseType[,"propertylandusetypeid"]==248,"logerror"],breaks=100,xlim=c(-0.4,0.4))
hist(All_largeFreqPropertyLandUseType[All_largeFreqPropertyLandUseType[,"propertylandusetypeid"]==265,"logerror"],breaks=100,xlim=c(-0.4,0.4))
hist(All_largeFreqPropertyLandUseType[All_largeFreqPropertyLandUseType[,"propertylandusetypeid"]==248,"logerror"],breaks=200,xlim=c(-0.4,0.4))
hist(All_largeFreqPropertyLandUseType[All_largeFreqPropertyLandUseType[,"propertylandusetypeid"]==265,"logerror"],breaks=100,xlim=c(-0.4,0.4).xlab="log error")
hist(All_largeFreqPropertyLandUseType[All_largeFreqPropertyLandUseType[,"propertylandusetypeid"]==265,"logerror"],breaks=100,xlim=c(-0.4,0.4),xlab="log error")
hist(All_largeFreqPropertyLandUseType[All_largeFreqPropertyLandUseType[,"propertylandusetypeid"]==248,"logerror"],breaks=200,xlim=c(-0.4,0.4),xlab="log error")
View(head(property))
count(All,'buildingqualitytypeid') ## library plyr
largeFreqPropertyLandUseType <- count(All,'propertylandusetypeid') ## library plyr
count(All,'propertylandusetypeid')
aggregate(All[,c("logerror","propertylandusetypeid")], list(All), mean)
aggregate(All[,c("logerror","propertylandusetypeid")], list(All$propertylandusetypeid), mean)
count(All,'propertylandusetypeid')
count(All,'propertylandusetypeid')
count(All,'buildingqualitytypeid') ## library plyr
aggregate(All[,c("logerror","buildingqualitytypeid")], list(All$buildingqualitytypeid), mean)
View(head(property))
-10/16*log2(10/16)
-10/16*log2(10/16)-6/16*log2(6/16)
-8/12*logs(8/12)
-8/12*log2(8/12)
-8/12*log2(8/12)-4/12*log2(4/12)
-2/4*log2(2/4)-2/4*log2(2/4)
0.954434-12/16*0.9182958-4/16*1
render_site()
setwd("~/GitHub/anpinHuang.github.io")
setwd("~/GitHub/anpinHuang.github.io")
render_site()
render_site()
render_site()
render_site("index.rmd")
render_site("decisionTree.rmd")
render_site("deriveOLS.rmd")
render_site("deriveOLS.rmd")
render_site("deriveOLS.rmd")
render_site("deriveOLS.rmd")
render_site("deriveOLS.rmd")
render_site("deriveOLS.rmd")
render_site("deriveOLS.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("mergeAggregateCount.rmd")
render_site("mergeAggregateCount.rmd")
render_site("dataScienceML.rmd")
render_site("autocorrelation.rmd")
render_site("autocorrelation.rmd")
render_site("autocorrelation.rmd")
render_site("autocorrelation.rmd")
churnAnalysis <- fread("WA_Fn-UseC_-Telco-Customer-Churn.csv")
churnAnalysis <- as.data.frame(churnAnalysis)
View(head(churnAnalysis))
churnAnalysis <- fread("WA_Fn-UseC_-Telco-Customer-Churn.csv")
churnAnalysis <- as.data.frame(churnAnalysis)
View(head(churnAnalysis))
View(head(churnAnalysis))
View(head(churnAnalysis))
colnames(churnAnalysis)
churnAnalysis(churnAnalysis[,c("PaymentMethod","MonthlyCharges")], list(churnAnalysis$PaymentMethod), mean)
aggregate(churnAnalysis[,c("PaymentMethod","MonthlyCharges")], list(churnAnalysis$PaymentMethod), mean)
PaymentMethodMonthlyCharges <- aggregate(churnAnalysis[,c("PaymentMethod","MonthlyCharges")], list(churnAnalysis$PaymentMethod), mean)
colnames(PaymentMethodMonthlyCharges)
aggregate(churnAnalysis[,c("PaymentMethod","MonthlyCharges")], list(churnAnalysis$PaymentMethod), mean)
count(churnAnalysis,'PaymentMethod')
render_site("mergeAggregateCount.rmd")
render_site("mergeAggregateCount.rmd")
render_site("mergeAggregateCount.rmd")
render_site("mergeAggregateCount.rmd")
render_site("mergeAggregateCount.rmd")
render_site("mergeAggregateCount.rmd")
render_site("mergeAggregateCount.rmd")
render_site("mergeAggregateCount.rmd")
render_site("mergeAggregateCount.rmd")
render_site("mergeAggregateCount.rmd")
render_site("mergeAggregateCount.rmd")
render_site("mergeAggregateCount.rmd")
render_site("mergeAggregateCount.rmd")
render_site("mergeAggregateCount.rmd")
render_site("mergeAggregateCount.rmd")
render_site("mergeAggregateCount.rmd")
render_site("mergeAggregateCount.rmd")
render_site("heteroskedasticity.rmd")
render_site("heteroskedasticity.rmd")
render_site("heteroskedasticity.rmd")
render_site("heteroskedasticity.rmd")
render_site("heteroskedasticity.rmd")
render_site("heteroskedasticity.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("index.rmd")
render_site("index.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("about.rmd")
render_site("about.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
render_site("decisionTree.rmd")
sapply(churnAnalysis, function(x) sum(is.na(x)))
churnAnalysis <- churnAnalysis[which(!is.na(churnAnalysis[,"TotalCharges"])),]
View(churnAnalysis)
View(churnAnalysis)
colnamse(churnAnalysis)
colnames(churnAnalysis)
View(churnAnalysis)
hist(churnAnalysis["MonthlyCharges"])
hist(churnAnalysis[,"MonthlyCharges"])
hist(churnAnalysis[,"MonthlyCharges"],breaks=20)
hist(churnAnalysis[,"MonthlyCharges"],breaks=40)
hist(churnAnalysis[,"TotalCharges"],breaks=40)
hist(churnAnalysis[,"tenure",breaks=20)
hist(churnAnalysis[,"tenure"],breaks=20)
hist(churnAnalysis[,"tenure"],breaks=40)
hist(churnAnalysis[,"tenure"],breaks=80)
render_site(mergeAggregateCount.rmd)
render_site("mergeAggregateCount.rmd")
render_site("mergeAggregateCount.rmd")
render_site("mergeAggregateCount.rmd")
render_site("mergeAggregateCount.rmd")
render_site("mergeAggregateCount.rmd")
render_site("mergeAggregateCount.rmd")
render_site("mergeAggregateCount.rmd")
ifelse(churnAnalysis[,"MonthlyCharges"]<=30,"<=$30",">30$")
MonthlyChargesClass <- churnAnalysis[,"MonthlyCharges"]<=30,"<=$30",">30$")
ifelse(churnAnalysis[,"MonthlyCharges"]<=30,"<=$30",">30$")
MonthlyChargesClass <- ifelse(churnAnalysis[,"MonthlyCharges"]<=30,"<=$30",">30$")
switch(TenureClass,<=5,"<=5")
TenureClass <- churnAnalysis[,"tenure"]
TenureClass[which(TenureClass >=70)] <- ">=70"
TenureClass[which(TenureClass <=5)] <- "<=5"
TenureClass[which(TenureClass >5 &  enureClass <70)] <- "between"
TenureClass <- churnAnalysis[,"tenure"]
TenureClass[which(TenureClass >=70)] <- ">=70"
TenureClass[which(TenureClass <=5)] <- "<=5"
TenureClass[which(TenureClass >5 &  TenureClass <70)] <- "between"
TenureClass
View(churnAnalysis)
sample(1:nrow(churnAnalysis))
churnAnalysis <- churnAnalysis[sample(1:nrow(churnAnalysis)),]
View(churnAnalysis)
hist(churnAnalysis[,"MonthlyCharges"],breaks=40)
churnAnalysisTraining <- churnAnalysis[1:(nrow(churnAnalysis)/2),]
churnAnalysisValidation <- churnAnalysis[(nrow(churnAnalysis)/2+1): (3*nrow(churnAnalysis)/4),]
churnAnalysisTest <- churnAnalysis[(3*nrow(churnAnalysis)/4+1),nrow(churnAnalysis)]
hist(churnAnalysisTraining[,"MonthlyCharges"],breaks=40)
nrow(churnAnalysisTraining)
nrow(churnAnalysisTesting)
nrow(churnAnalysisTest)
(3*nrow(churnAnalysis)/4+1)
nrow(churnAnalysis)
churnAnalysisTest <- churnAnalysis[(3*nrow(churnAnalysis)/4+1),nrow(churnAnalysis)]
nrow(churnAnalysisTest)
nrow(churnAnalysisValidation)
churnAnalysisTraining <- churnAnalysis[1:(nrow(churnAnalysis)/2),]
churnAnalysisValidation <- churnAnalysis[(nrow(churnAnalysis)/2+1): (3*nrow(churnAnalysis)/4),]
churnAnalysisTest <- churnAnalysis[(3*nrow(churnAnalysis)/4+1),nrow(churnAnalysis),]
hist(churnAnalysisTraining[,"MonthlyCharges"],breaks=40)
hist(churnAnalysisTraining[,"TotalCharges"],breaks=40)
hist(churnAnalysisTraining[,"tenure"],breaks=80)
install.packages("party")
library(party)
install.packages("mvtnorm")
install.packages("mvtnorm")
