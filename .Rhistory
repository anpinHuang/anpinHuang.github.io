install.packages("sparklyr")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("sparklyr")
install.packages(c("cluster", "foreign", "httpuv", "Matrix", "party", "shiny", "sourcetools", "survival"))
install.packages("httpuv")
dist10 <- numeric(0)
N=12000
for(i in 1:N) {
s10 <- sample(1:6,100,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(0,6))
dist10 <- numeric(0)
N=12000
for(i in 1:N) {
s10 <- sample(1:6,10,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(0,6))
dist10 <- numeric(0)
N=1200
for(i in 1:N) {
s10 <- sample(1:6,10,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(0,6))
dist10 <- numeric(0)
N=1200
for(i in 1:N) {
s10 <- sample(1:6,10,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(0,6))
sd(dist10)
sd(dist10)^2
((1-3.5)^2+(2-3.5)^2+(3-3.5)^2+(4-3.5)^2+(5-3.5)^2+(6-3.5)^2)/6
## roll the dice s=10 times and take the average. repeat the process for N=200 times and see what the dist. looks like
dist10 <- numeric(0)
N=120
for(i in 1:N) {
s10 <- sample(1:6,10,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(0,6))
sd(dist10)^2 ## Var
dist10 <- numeric(0)
N=1200
for(i in 1:N) {
s10 <- sample(1:6,10,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(0,6))
sd(dist10)^2 ## Var
## roll the dice s=10 times and take the average. repeat the process for N=200 times and see what the dist. looks like
dist10 <- numeric(0)
N=10000
for(i in 1:N) {
s10 <- sample(1:6,10,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(0,6))
sd(dist10)^2 ## Var
dist10 <- numeric(0)
N=1200
for(i in 1:N) {
s10 <- sample(1:6,10,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(0,6))
sd(dist10)^2 ## Var
## roll the dice s=10 times and take the average. repeat the process for N=200 times and see what the dist. looks like
dist10 <- numeric(0)
N=10000
for(i in 1:N) {
s10 <- sample(1:6,10,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(0,6))
sd(dist10)^2 ## Var
## roll the dice s=10 times and take the average. repeat the process for N=200 times and see what the dist. looks like
dist10 <- numeric(0)
N=10000
for(i in 1:N) {
s10 <- sample(1:6,100,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(0,6))
sd(dist10)^2 ## Var
```{r}
## roll the dice s=10 times and take the average. repeat the process for N=200 times and see what the dist. looks like
dist10 <- numeric(0)
N=10000
for(i in 1:N) {
s10 <- sample(1:6,1000,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(0,6))
sd(dist10)^2 ## Var
```
## roll the dice s=10 times and take the average. repeat the process for N=200 times and see what the dist. looks like
dist10 <- numeric(0)
N=10000
for(i in 1:N) {
s10 <- sample(1:6,50,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(0,6))
sd(dist10)^2 ## Var
## roll the dice s=10 times and take the average. repeat the process for N=200 times and see what the dist. looks like
dist10 <- numeric(0)
N=10000
for(i in 1:N) {
s10 <- sample(1:6,100,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(0,6))
sd(dist10)^2 ## Var
## roll the dice s=10 times and take the average. repeat the process for N=200 times and see what the dist. looks like
dist10 <- numeric(0)
N=100
for(i in 1:N) {
s10 <- sample(1:6,10,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(0,6))
sd(dist10)^2 ## Var
## roll the dice s=10 times and take the average. repeat the process for N=200 times and see what the dist. looks like
dist10 <- numeric(0)
N=100
for(i in 1:N) {
s10 <- sample(1:6,10,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(1,6))
sd(dist10)^2 ## Var
## roll the dice s=10 times and take the average. repeat the process for N=200 times and see what the dist. looks like
dist10 <- numeric(0)
N=1000
for(i in 1:N) {
s10 <- sample(1:6,10,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(0,6))
sd(dist10)^2 ## Var
## roll the dice s=10 times and take the average. repeat the process for N=200 times and see what the dist. looks like
dist10 <- numeric(0)
N=10000
for(i in 1:N) {
s10 <- sample(1:6,10,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(0,6))
sd(dist10)^2 ## Var
## roll the dice s=10 times and take the average. repeat the process for N=200 times and see what the dist. looks like
dist10 <- numeric(0)
N=10000
for(i in 1:N) {
s10 <- sample(1:6,50,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(0,6))
sd(dist10)^2 ## Var
## roll the dice s=10 times and take the average. repeat the process for N=200 times and see what the dist. looks like
dist10 <- numeric(0)
N=10000
for(i in 1:N) {
s10 <- sample(1:6,100,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(0,6))
sd(dist10)^2 ## Var
dist10 <- numeric(0)
N=10000
for(i in 1:N) {
s10 <- sample(1:6,10,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(1,6))
sd(dist10)^2 ## Var
## roll the dice s=10 times and take the average. repeat the process for N=200 times and see what the dist. looks like
dist10 <- numeric(0)
N=10000
for(i in 1:N) {
s10 <- sample(1:6,50,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(1,6))
sd(dist10)^2 ## Var
## roll the dice s=10 times and take the average. repeat the process for N=200 times and see what the dist. looks like
dist10 <- numeric(0)
N=100
for(i in 1:N) {
s10 <- sample(1:6,10,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(1,6))
sd(dist10)^2 ## Var
## roll the dice s=10 times and take the average. repeat the process for N=200 times and see what the dist. looks like
dist10 <- numeric(0)
N=100
for(i in 1:N) {
s10 <- sample(1:6,10,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(2,5))
sd(dist10)^2 ## Var
## roll the dice s=10 times and take the average. repeat the process for N=200 times and see what the dist. looks like
dist10 <- numeric(0)
N=1000
for(i in 1:N) {
s10 <- sample(1:6,10,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(1,6))
sd(dist10)^2 ## Var
## roll the dice s=10 times and take the average. repeat the process for N=200 times and see what the dist. looks like
dist10 <- numeric(0)
N=1000
for(i in 1:N) {
s10 <- sample(1:6,10,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(2,5))
sd(dist10)^2 ## Var
dist10 <- numeric(0)
N=10000
for(i in 1:N) {
s10 <- sample(1:6,10,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(2,5))
sd(dist10)^2 ## Var
dist10 <- numeric(0)
N=10000
for(i in 1:N) {
s10 <- sample(1:6,50,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(2,5))
sd(dist10)^2 ## Var
## roll the dice s=10 times and take the average. repeat the process for N=200 times and see what the dist. looks like
dist10 <- numeric(0)
N=10000
for(i in 1:N) {
s10 <- sample(1:6,100,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(2,5))
sd(dist10)^2 ## Var
library(rmarkdown)
render_site()
setwd("/Users/an-pin/GitHub/anpinHuang.github.io")
render_site()
render_site(econometrics.rmd)
render_site('econometrics.rmd')
render_site('CLM.rmd')
render_site('econometrics.rmd')
render_site('CLM.rmd')
lines(dnorm(c(1:100),3.5,0.28))
lines(seq(1:100),dnorm(c(1:100),3.5,0.28))
seq(1:100)
curve(dnorm(dist10, mean=0, sd=0.29), add=TRUE)
hist(dist10,breaks=40,xlim=c(2,5),probability = TRUE)
curve(dnorm(dist10, mean=0, sd=0.29), add=TRUE)
dnorm(dist10, mean=0, sd=0.29)
curve(dnorm(dist10, mean=0, sd=0.29), add=TRUE)
?curve
curve(dnorm(x, mean=0, sd=0.29),2,5, add=TRUE)
dnorm(x, mean=0, sd=0.29)
dnorm(x, mean=0, sd=0.29)
x
seq(min(dist10),max(dist10),length(dist10))
min(dist10)
max(dist10)
length(dist10)
seq(min(dist10),max(dist10),length(dist10))
?seq
x <- seq(from=min(dist10),to=max(dist10),length.out=length(dist10))
x
x <- seq(from=min(dist10),to=max(dist10),length.out=length(dist10))
dNorm <- dnorm(x)
lines(x,dNorm)
?lines
hist(dist10,breaks=40,xlim=c(2,5),probability = TRUE)
x <- seq(from=min(dist10),to=max(dist10),length.out=length(dist10))
dNorm <- dnorm(x)
lines(x,dNorm,type=l)
dNorm
lines(x,dNorm,type='l)
lines(x,dNorm,type='l')
x <- seq(from=min(dist10),to=max(dist10),length.out=40)
dNorm <- dnorm(x)
lines(x,dNorm,type='l')
dNorm
curve(dnorm)
hist(dist10,breaks=40,xlim=c(2,5),probability = TRUE)
curve(dnorm,add=TRUE)
?curve
?hist
hist(dist10,breaks=40,xlim=c(2,5),probability = TRUE)
xfit <- seq(min(dist10), max(dist10), length=40)
yfit_density <- dnorm(xfit, mean=0,sd=0.29)
lines(xfit, yfit_density, col="blue", lwd=2)
yfit_density
xfit
xfit
yfit_density
yfit_density <- dnorm(xfit, mean=3.5,sd=0.29)
lines(xfit, yfit_density, col="blue", lwd=2)
xfit <- seq(min(dist10), max(dist10), length=40)
yfit_density <- dnorm(xfit, mean=3.5,sd=0.28)
lines(xfit, yfit_density, col="blue", lwd=2)
hist(dist10,breaks=40,xlim=c(2,5),probability = TRUE)
xfit <- seq(min(dist10), max(dist10), length=40)
yfit_density <- dnorm(xfit, mean=3.5,sd=0.25)
lines(xfit, yfit_density, col="blue", lwd=2)
hist(dist10,breaks=40,xlim=c(2,5),probability = TRUE)
xfit <- seq(min(dist10), max(dist10), length=40)
yfit_density <- dnorm(xfit, mean=3.5,sd=0.23)
lines(xfit, yfit_density, col="blue", lwd=2)
hist(dist10,breaks=40,xlim=c(2,5),probability = TRUE)
xfit <- seq(min(dist10), max(dist10), length=40)
yfit_density <- dnorm(xfit, mean=3.5,sd=0.2)
lines(xfit, yfit_density, col="blue", lwd=2)
dist10 <- numeric(0)
N=100
for(i in 1:N) {
s10 <- sample(1:6,10,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(2,5),probability = TRUE)
xfit <- seq(min(dist10), max(dist10), length=40)
yfit_density <- dnorm(xfit, mean=3.5,sd=0.2)
lines(xfit, yfit_density, col="blue", lwd=2)
c(1,2,3,4,5,6)
c(1,2,3,4,5,6)-3.5
(c(1,2,3,4,5,6)-3.5)^2/6
sum((c(1,2,3,4,5,6)-3.5)^2/6)
sum((c(1,2,3,4,5,6)-3.5)^2/6)/10
c(1:6)/6
sum(c(1:6)/6)
sum((c(1,2,3,4,5,6)-3.5)^2/6)/10
sum((c(1,2,3,4,5,6)-3.5)^2/(5))/10
sum((c(1,2,3,4,5,6)-3.5)^2/6)/10
0.2916667^(1/2)
hist(dist10,breaks=40,xlim=c(2,5),probability = TRUE)
xfit <- seq(min(dist10), max(dist10), length=40)
yfit_density <- dnorm(xfit, mean=3.5,sd=0.5400618)
lines(xfit, yfit_density, col="blue", lwd=2)
dist10 <- numeric(0)
N=1000
for(i in 1:N) {
s10 <- sample(1:6,10,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(2,5))
lines(xfit, yfit_density, col="blue", lwd=2)
dist10 <- numeric(0)
N=1000
for(i in 1:N) {
s10 <- sample(1:6,10,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(2,5))
xfit <- seq(min(dist10), max(dist10), length=40)
yfit_density <- dnorm(xfit, mean=3.5,sd=0.5400618)
lines(xfit, yfit_density, col="blue", lwd=2)
hist(dist10,breaks=40,xlim=c(2,5), freq = FALSE)
xfit <- seq(min(dist10), max(dist10), length=40)
yfit_density <- dnorm(xfit, mean=3.5,sd=0.5400618)
lines(xfit, yfit_density, col="blue", lwd=2)
dist10 <- numeric(0)
N=10000
for(i in 1:N) {
s10 <- sample(1:6,10,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(2,5),freq = FALSE)
xfit <- seq(min(dist10), max(dist10), length=40)
yfit_density <- dnorm(xfit, mean=3.5,sd=0.5400618)
lines(xfit, yfit_density, col="blue", lwd=2)
(sum((c(1,2,3,4,5,6)-3.5)^2/6)/50)^(1/2)
dist10 <- numeric(0)
N=10000
for(i in 1:N) {
s10 <- sample(1:6,50,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(2,5))
dist10 <- numeric(0)
N=10000
for(i in 1:N) {
s10 <- sample(1:6,10,rep=T)
dist10 <- c(dist10,mean(s10))
}
hist(dist10,breaks=40,xlim=c(2,5),freq = FALSE)
xfit <- seq(min(dist10), max(dist10), length=40)
yfit_density <- dnorm(xfit, mean=3.5,sd=0.2415229)
lines(xfit, yfit_density, col="blue", lwd=2)
dist50 <- numeric(0)
N=10000
for(i in 1:N) {
s50 <- sample(1:6,50,rep=T)
dist50 <- c(dist50,mean(s50))
}
hist(dist50,breaks=40,xlim=c(2,5), freq = FALSE)
xfit <- seq(min(dist50), max(dist50), length=40)
yfit_density <- dnorm(xfit, mean=3.5,sd=0.2415229)
lines(xfit, yfit_density, col="blue", lwd=2)
sd(dist50)^2 ## Var
(sum((c(1,2,3,4,5,6)-3.5)^2/6)/100)^(1/2)
dist100 <- numeric(0)
N=10000
for(i in 1:N) {
s100 <- sample(1:6,100,rep=T)
dist100 <- c(dist100,mean(s100))
}
hist(dist100,breaks=40,xlim=c(2,5))
xfit <- seq(min(dist100), max(dist100), length=40)
yfit_density <- dnorm(xfit, mean=3.5,sd=0.1707825)
lines(xfit, yfit_density, col="blue", lwd=2)
sd(dist100)^2 ## Var
dist100 <- numeric(0)
N=10000
for(i in 1:N) {
s100 <- sample(1:6,100,rep=T)
dist100 <- c(dist100,mean(s100))
}
hist(dist100,breaks=40,xlim=c(2,5),freq = FALSE)
xfit <- seq(min(dist100), max(dist100), length=40)
yfit_density <- dnorm(xfit, mean=3.5,sd=0.1707825)
lines(xfit, yfit_density, col="blue", lwd=2)
render_site('CLM.rmd')
render_site('CLM.rmd')
render_site('DuplicateObservations.rmd')
render_site('econometrics.rmd')
render_site('econometrics.rmd')
render_site('econometrics.rmd')
x <- seq(-10,10, length=40)
y <- 1/(1+exp(-x))
plot(x, y, col="blue", lwd=2)
x <- seq(-10,10, length=40)
y <- 1/(1+exp(-x))
plot(x, y, col="blue", lwd=2,type='l)
x <- seq(-10,10, length=40)
y <- 1/(1+exp(-x))
plot(x, y, col="blue", lwd=2,type='l')
x <- seq(-10,10, length=40)
y <- 1/(1+exp(-x))
plot(x, y, col="blue", lwd=2,type='l',ylim=c(1,0))
x <- seq(-10,10, length=40)
y <- 1/(1+exp(-x))
plot(x, y, col="blue", lwd=2,type='l',ylim=c(0,1))
t <- seq(-10,10, length=40)
sigmoid_t <- 1/(1+exp(-t))
plot(t, sigmoid_t, col="blue", lwd=2,type='l')
